PROFESSOR: Oswaldo Neto
CTO


[FASE-1]

FUNDAMENTOS DE ARQUITETURA DE SISTEMAS

Internet das coisas

OBJETIVOS

1. Introdução a internet das coisas
2. Arquitetura da internet das coisas
3. Estudo do caso

REQUISITOS BÁSICOS

- CLOUD COMPUTING
- Protocolo de comunicação de rede
- Processamento e armazenamento de dados

PROJETO : ARPANET

1969>
1970>
1972>
1977>

A REDE MUNDIAL DE COMPUTADORES

COM O EVENTO DA INTERNET SURGIU OS APLICATIVOS:
 
Tiktok.
Facebook.
Whatsapp.
Instagram.
Zoom.
Snapchat.
Messenger.
SnackVideo.

Todos usam uma rede mundial conectados constantementes.
Porque conectar as coisas ?

- Embutir sensores em objetos do dia-a-dia
- Coletar dados dos sensores
- Usar o dado para tomar decisão 

Conceitos básicos de IoT

Things > Cloud > Intelligence 

Smart build Exemplo do video. 
Aqui um exemplo de Smart Build em sistemas

"É possível ter a economia de um edifício inteligente em um prédio comum?
É possível minimizar gastos, com: reaproveitamento da água; substituição de lâmpadas halogênicas por lâmpadas de led – reduzem o consumo elétrico em até 80%; implementação de vidros verdes; sistema de controle de temperatura – gera economia com o ar-condicionado; sistema de conversão calor em energia.

Para a redução de custos em serviços, a automatização da segurança e portaria são soluções estratégicas. A portaria eletrônica inteligente Condomínio Conectado, se destaca em termos de tecnologia e custo-benefício.C"

Fonte: https://gscseguranca.com.br/novidades/o-que-sao-edificios-inteligentes-smart-building/


Wearables

Wearables, tecnologia vestível ou simplesmente vestíveis é um termo geral para um grupo de dispositivos móveis, como relógios, fones de ouvido, óculos de realidade aumentada e aparelhos para atividades físicas, projetados para serem utilizados como acessórios ou ao longo do dia.

Fonte: https://www.ecycle.com.br/wearables/

RFID SUPPLY CHAIN

Um dos campos férteis para a aplicação da tecnologia RFID é na gestão da cadeia logística (Supply Chain Management). As funcionalidades do RFID permitem desenvolver aplicações logísticas mais flexíveis e inteligentes. Neste artigo vamos abordar as diversas possibilidades e benefícios da aplicação do RFID na logística

Fonte: https://cio.com.br/tendencias/rfid-na-gestao-da-cadeia-logistica/#:~:text=Um%20dos%20campos%20férteis%20para,aplicação%20do%20RFID%20na%20logística.

Computação Ubíqua

Oriundo do termo inglês Ubiquitous Computing ou Ubicomp, a Computação Ubíqua, também chamada de Computação Pervasiva e UbiComp, descreve a presença direta e constante da informática e tecnologia na vida das pessoas, em suas casas e ambientes de convívio social.

Fonte: https://www.infoescola.com/informatica/computacao-ubiqua/#:~:text=Oriundo%20do%20termo%20inglês%20Ubiquitous,e%20ambientes%20de%20convívio%20social.

Desafios da internet das coisas

1. Privacidade e segurança
2. Quantidade exponencial de dispositivos conectadas na rede
3. Ser capaz de processar e armazenar um enorme quantidade de informações
4. Gerar valor a partir dos dados


[FASE-2]

ARQUITETURA DA INTERNET DAS COISAS 

Problema a resolver 

Fonte: https://www.redhat.com/pt-br/topics/cloud-computing/what-is-cloud-architecture


Considere esses atributos na escolha

Baixo consumo de energia
Rede de dados limitado
Resiliencia
Segurança
Customização
Baixo Custo

Arduino 

Plataforma de Prototipagem 
Com entradas/saídas 
Desenvolvedor escreve em C/C++
Interface Serial ou USB
Shield

[Arduido]
void setup () {
   pinMode (LED_PIN, OUTPUT);    // Habilita o pino 13 para saida digital (OUTPUT). 
}

void loop () {
   digitalWrite (LED_PIN, HIGH)  // Liga o LED.
   delay (1000);                 // Espera 1 segundo (1000 milissegundos).
   digitalWrite (LED_PIN, LOW);  // Desliga o LED.
   delay (1000);                 // espera 1 segundo. 
}

int main(void)
{
   //Define o LED_PIN 13 
   int LED_PIN = 13;
   init();
   setup();
   for (;;)
       loop ();
   return 0;
}


EMBARCADOS 

[MCUs]

Microcontrolador de chip único 
Sistema operacional real time
Embarcado
Uso industrial,médico, militar, transporte

Microcontrolador é um pequeno computador num único circuito integrado o qual contém um núcleo de processador, memória e periféricos programáveis de entrada e saída. A memória de programação pode ser RAM, NOR flash ou PROM a qual, muitas vezes, é incluída no chip

Fonte: https://pt.wikipedia.org/wiki/Microcontrolador

Minicomputadores

Computador completo 
Hardware integrado em uma única placa
Roda SO LINUX ou Windows 
Uso dómestico e comercial

[RaspberryPi]

O que é a Raspberry Pi?

A Raspberry Pi é um computador de placa única do tamanho de um cartão de crédito (ou até menor, dependendo do modelo). Quando ela é conectada a um monitor, mouse e teclado, a RPi funciona como um computador desktop.

Protocolo de comunicação


Smartphone Carro Taxi 
Gps Tracker Carro Taxi  
Smartphone Carro Taxi           > [CLOUD
Smartphone Carro Taxi  
Gps Tracker Carro Taxi   

O Protocolo MQTT

Fonte: https://www.hitecnologia.com.br/blog/o-que-e-protocolo-mqtt/

[MQTT]

Base na pilha TCP/IP
Protocolo de mensagem assíncrona (M2M)
Criado pela IBM para conectar sensores de pipelines de petróleo a satélites
Padrão OASIS suportado pelas linguagens de programação mais populares

Modelo Publish/Subscribe 

Fonte: https://docs.microsoft.com/pt-br/azure/architecture/patterns/publisher-subscriber

O modelo Publish/Subscriber, também conhecido como pub/sub, recurso este presente no MQTT é um padrão para troca de mensagens que funciona de forma desacoplada, isso significa que publicador e assinante podem interagir sem que um conheça o outro, basta que ambos conheçam o evento

Fonte: https://blogmasterwalkershop.com.br/outros/protocolo-mqtt-publish-subscriber-parte-01


[FASE-3]

A FLEXIBILIDADE DOS TÓPICOS 

mqtt       ://     broker.io        ://       a6g319       ://     gps    ://    position 
PROTOCO             BROKER                USER IDENTIFIER         SENSOR       INFORMATION TYPE

mqtt://broker/user/accelerometer
mqtt://broker/user/gps/position
mqtt://broker/user/gps/velocity

O broker é o elemento responsável por gerir as publicações e as subscrições do protocolo MQTT. Ele é como uma espécie de mediador entre as máquinas, capaz de fazer com que a comunicação de fato ocorra entre elas. O broker permite um desacoplamento entre as partes, novidade entre esse tipo de sistema.

O broker é um grande servidor que recebe todas as mensagens dos seus clientes e envia essas mensagens aos clientes de destino – e como exemplo, alguns clientes podem ser desde sensores IoT ou até uma aplicação que recebe os dados dos sensores e os processa.

sub mqtt://broker/a644/accelerometer
sub mqtt://broker/a5445564/gps/position
sub mqtt://broker/f458/gps/velocity

QoS

MQTT Client  <>  Publish  <>  MQTT Broker

Nivel minimo de menor esforço
Sem garantia de entrega
Mensagem não é retransmitida

QoS 1 - 2

MQTT Client  <>  Publish  <>  MQTT Broker

Garante que a mensagem foi entregue no minimo uma vez ao receber.
Mensagem pode ser retransmitida se não houver confirmação de entrega.

O QoS (Quality of Service, em inglês) é uma tecnologia presente em roteadores para garantir ao usuário maior controle sobre sua rede Wi-Fi. Por meio da ferramenta, é possível determinar quais dispositivos e serviços terão maior prioridade de conexão.

Fonte: https://www.techtudo.com.br/noticias/2018/07/o-que-e-qos-entenda-para-que-serve-a-tecnologia-em-roteadores.ghtml

[Cloud]

De uma forma simples, cloud computing, ou computação na nuvem, é uma tecnologia que permite acesso remoto a softwares, armazenamento de arquivos e processamento de dados por meio da internet. É uma alternativa para você acessar dados importantes de qualquer computador, em qualquer lugar.

Quem usa a computação em nuvem? Organizações de todos os tipos, portes e setores usam a nuvem para uma grande variedade de casos de uso, como backup de dados, recuperação de desastres, e-mail, desktops virtuais, desenvolvimento e teste de software, análises de big data e aplicativos web voltados ao cliente.

Fonte: https://www.mandic.com.br/cloud/ 

Data Store: Armazena cada posição geografica recebida identificada usuário. data e hora permitindo reconstruir rotas inteiras.

Data Store < Worker < Broker > Worker > Chace > Client 

Client: Apresenta em tempo real a última posição de cada usuário no mapa e quantidade de usuários por hora.

[BROKER] -> [WORKER] -> [DATA-STORE]
Documento DB 
Relacional DB
[
   {
      "user" "xxxxx",
      "timestamp" "xxxxx",
      "lat" "xxxxx",
      "lon" "xxxxx",
   },
   {
      "user" "xxxx",
      "timestamp" "xxxxx",
      "lat" "xxxxxx",
      "lon" "xxxx",
   },
   {
      "user" "xxxxx",
      "timestamp" "xxxxx",
      "lat" "xxxx",
      "lon" "xxxxx",
   },
]


[FASE-4]

ESTUDO DE CASO 


         ?            ?           ?
GPS -> BROKER  -> WORKER  -> DATA-STORE

Arquitetura é escolha.

Prova de Conceito 

APP ANDROID -> ECLIPSE MOSQUITTO Node.JS -> Banco de dados -> MySQL

Fonte: https://mosquitto.org

Eclipse Mosquitto é um agente de mensagens de software livre (licenciado por EPL / EDL) que implementa o protocolo MQTT versões 5.0, 3.1.1 e 3.1. O Mosquitto é leve e adequado para uso em todos os dispositivos, desde computadores de placa única de baixa potência até servidores completos.


Mínimo Produto Viável 

GPS Embarcado -> HiveMQ -> Akka Scala JVM -> Banco de Dados noSQL

HiveMQ
Os aplicativos IoT podem gerar MUITOS dados. É fundamental selecionar uma tecnologia projetada para mover dados de IoT entre redes e plataformas de nuvem. O broker MQTT da HiveMQ é projetado para implementações nativas da nuvem para fazer o uso ideal dos recursos da nuvem. Seu uso de MQTT reduz a largura de banda da rede necessária para mover dados. Soluções eficientes de IoT significam custos totais de operação mais baixos.


Akka Scala JVM
Akka é um kit de ferramentas para a construção de aplicativos orientados a mensagens altamente concorrentes, distribuídos e resilientes para Java e Scala


Banco de Dados noSQL
Os bancos de dados NoSQL (ou não-relacionais) utilizam um padrão diferente de armazenamento em relação ao SQL. O grande diferencial dessa tecnologia é a capacidade de escalabilidade para as operações das empresas de uma forma mais simples e econômica do que no banco relacional.


Solução 

GPS Embarcado -> AWS IoT Core -> AWS Kinesis Firehose -> AWS S3


AWS IoT Core
A AWS oferece serviços e soluções de Internet das Coisas (IoT) para conectar e gerenciar bilhões de dispositivos. ... De conectividade de dispositivo seguro a gerenciamento, armazenamento e análise, o AWS IoT tem os serviços abrangentes e altamente especializados de que você precisa para criar soluções completas.


AWS Kinesis Firehose
O Amazon Kinesis Data Firehose é um serviço totalmente gerenciado que provisiona, gerencia e escala automaticamente recursos de computação, memória e rede necessários para processar e carregar dados de streaming.

AWS S3
O Amazon Simple Storage Service (Amazon S3) é um serviço de armazenamento de objetos que oferece escalabilidade, disponibilidade de dados, segurança e performance líderes do setor. Você pode utilizar o Amazon S3 para armazenar e recuperar qualquer volume de dados, a qualquer momento, de qualquer lugar na Web.



GPS Embarcado -> AWS IoT Core -> AWS Data Stream -> AWS Lambda -> AWS ElasticCache Redis

AWS ElasticCache Redis -> AWS EC2 -> FeathersJS backend -> Dashboard